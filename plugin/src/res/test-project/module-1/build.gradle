some_stuff {
    // ...
}

dependencies {

    // Files
    implementation files('module-1/some-library-2.1.0.jar')
    api files ("module-1/some-library-2.1.0.jar")

    // Projects
    implementation project(':module-2')
    implementation  project (":module-6")
    api project ":module-7"
    api  project  ':module-3'
    debugImplementation project(':module-4')
    compileOnly   project(':module-5')
    testImplementation  project(":module-2")
    androidTestImplementation   project(':module-3')

    // Libs
    api ('com.google.guava:guava:19.0')
    api 'com.google.android.gms:play-services-cast:16.0.3'
    implementation "org.jmdns:jmdns:3.5.1"
    implementation 'ru.ok.android-android2:duration-interval:${rootProject.property("library_b.version")}@aar'
    api "com.facebook.device.yearclass:yearclass:${rootProject.property("library_a.version")}"
    implementation("com.google.android:library:" + rootProject["library_c.version"] + ':all')
    implementation fileTree(dir: 'libs', include: ['*.jar']) // Ignored
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"

    // Don't parse compound version, use the latest JAR or AAR for the given dependency
    implementation("com.android:library-controls:${rootProject['library_d.version']}-firebase-support-notify-support-${rootProject['library_e.version']}@aar")
    testImplementation "com.google.guava:guava:${project.ext.guavaVersion}"
    testImplementation 'junit:junit:' + rootProject['junit.version']
    androidTestImplementation 'org.robolectric:robolectric:' + rootProject['robolectric.version']
    androidTestImplementation 'org.apache.commons:commons-lang3:3.4'
    androidTestImplementation (group: 'com.android', name: 'common-api', version: '2.1.456-SNAPSHOT', classifier: 'client')
    androidTestImplementation ('com.android:test-library:1.6.65:all')
    api "com.google.firebase:firebase-messaging"
    implementation 'com.google.firebase:firebase-crashlytics'

    // Version in a separate variable
    def myLib_version = rootProject.property("library_b.version")
    api("androidx.emoji:emoji-appcompat:$myLib_version") {
}

some_other_stuff {
    // ...
}